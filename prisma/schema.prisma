generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String         @id @default(cuid())
  name         String         @db.VarChar(32)
  email        String         @unique
  phone        String?
  password     String
  createdAt    DateTime       @default(now())
  admin        Boolean        @default(false)
  Notification Notification[]
  PrintOrder   PrintOrder[]

  @@map("users")
}

model PrintPrice {
  id     String  @id @default(cuid())
  length String  @unique
  price  Decimal
  Print  Print[]

  @@map("print_prices")
}

model Color {
  id    String  @id @default(cuid())
  color String  @unique
  Print Print[]

  @@map("colors")
}

model Notification {
  id        String   @id @default(cuid())
  title     String
  message   String
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
  User      User     @relation(fields: [userId], references: [id])
  userId    String

  @@map("notifications")
}

enum PrintOrderStatus {
  WAITING
  IN_PRODUCTION
  DONE
}

model PrintOrder {
  id        String           @id @default(cuid())
  status    PrintOrderStatus @default(WAITING)
  user      User             @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime         @default(now())
  Print     Print[]

  @@map("print_orders")
}

model Print {
  id           String     @id @default(cuid())
  imageName    String
  imageUrl     String     @unique
  key          String     @unique
  printPrice   PrintPrice @relation(fields: [printPriceId], references: [id])
  printPriceId String
  border       Boolean
  color        Color      @relation(fields: [colorId], references: [id])
  colorId      String
  quantity     Decimal
  printOrder   PrintOrder @relation(fields: [printOrderId], references: [id])
  printOrderId String

  @@map("prints")
}
